"use strict";(self.webpackChunkmui_chips_input=self.webpackChunkmui_chips_input||[]).push([[491],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var l=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,l,a=function(e,n){if(null==e)return{};var t,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)t=i[l],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)t=i[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=l.createContext({}),o=function(e){var n=l.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=o(e.components);return l.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},s=l.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=o(t),h=a,k=s["".concat(u,".").concat(h)]||s[h]||c[h]||i;return t?l.createElement(k,r(r({ref:n},d),{},{components:t})):l.createElement(k,r({ref:n},d))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=s;var p={};for(var u in n)hasOwnProperty.call(n,u)&&(p[u]=n[u]);p.originalType=e,p.mdxType="string"==typeof e?e:a,r[1]=p;for(var o=2;o<i;o++)r[o]=t[o];return l.createElement.apply(null,r)}return l.createElement.apply(null,t)}s.displayName="MDXCreateElement"},1082:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>o});var l=t(7462),a=(t(7294),t(3905));const i={sidebar_position:3},r="API Reference",p={unversionedId:"api-reference",id:"api-reference",title:"API Reference",description:"This article discusses the API and props of MuiChipsInput. Props are defined within MuiChipsInputProps.",source:"@site/docs/api-reference.md",sourceDirName:".",slug:"/api-reference",permalink:"/mui-chips-input/docs/api-reference",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Getting Started",permalink:"/mui-chips-input/docs/getting-started"},next:{title:"TextField inheritance",permalink:"/mui-chips-input/docs/inheritance"}},u={},o=[{value:"<code>value</code>",id:"value",level:2},{value:"<code>onChange</code>",id:"onchange",level:2},{value:"<code>onAddChip</code>",id:"onaddchip",level:2},{value:"<code>onDeleteChip</code>",id:"ondeletechip",level:2},{value:"<code>onEditChip</code>",id:"oneditchip",level:2},{value:"<code>onInputChange</code>",id:"oninputchange",level:2},{value:"<code>inputValue</code>",id:"inputvalue",level:2},{value:"<code>clearInputOnBlur</code>",id:"clearinputonblur",level:2},{value:"<code>hideClearAll</code>",id:"hideclearall",level:2},{value:"<code>disableEdition</code>",id:"disableedition",level:2},{value:"<code>disableDeleteOnBackspace</code>",id:"disabledeleteonbackspace",level:2},{value:"<code>renderChip</code>",id:"renderchip",level:2},{value:"<code>validate</code>",id:"validate",level:2}],d={toc:o};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,l.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"api-reference"},"API Reference"),(0,a.kt)("p",null,"This article discusses the API and props of ",(0,a.kt)("strong",{parentName:"p"},"MuiChipsInput"),". Props are defined within ",(0,a.kt)("inlineCode",{parentName:"p"},"MuiChipsInputProps"),"."),(0,a.kt)("h2",{id:"value"},(0,a.kt)("inlineCode",{parentName:"h2"},"value")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"string[]")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"[]"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"<MuiChipsInput />\n<MuiChipsInput value={['foo', 'bar']} />\n")),(0,a.kt)("h2",{id:"onchange"},(0,a.kt)("inlineCode",{parentName:"h2"},"onChange")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"(value: string[]) => void")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,a.kt)("p",null,"Gets called once the user adds or removes a chip."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const handleChange = (value) => {\n  /**\n  value: ['foo']\n  **/\n}\n\n<MuiChipsInput onChange={handleChange} />\n")),(0,a.kt)("h2",{id:"onaddchip"},(0,a.kt)("inlineCode",{parentName:"h2"},"onAddChip")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"(chipValue: string, chipIndex: number) => void")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,a.kt)("p",null,"Gets called once the user adds a chip."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const handleAddChip = (chipValue, chipIndex) => {\n  /**\n  chipValue: 'bar'\n  chipIndex: 1\n  **/\n}\n\n<MuiChipsInput value={['foo']} onAddChip={handleAddChip} />\n")),(0,a.kt)("h2",{id:"ondeletechip"},(0,a.kt)("inlineCode",{parentName:"h2"},"onDeleteChip")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"(chipValue: string, chipIndex: number) => void")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,a.kt)("p",null,"Gets called once the user removes a chip."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const handleDeleteChip = (chipValue, chipIndex) => {\n  /**\n  chipValue: 'foo'\n  chipIndex: 0\n  **/\n}\n\n<MuiChipsInput value={['foo']} onDeleteChip={handleDeleteChip} />\n")),(0,a.kt)("h2",{id:"oneditchip"},(0,a.kt)("inlineCode",{parentName:"h2"},"onEditChip")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"(chipValue: string, chipIndex: number) => void")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,a.kt)("p",null,"Gets called once the user has edited a chip. User can edit a chip by double clicking on it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const handleEditChip = (chipValue, chipIndex) => {\n  /**\n  chipValue: 'bar'\n  chipIndex: 0\n  **/\n}\n\n<MuiChipsInput value={['foo']} onEditChip={handleEditChip} />\n")),(0,a.kt)("h2",{id:"oninputchange"},(0,a.kt)("inlineCode",{parentName:"h2"},"onInputChange")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"(inputValue) => void")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,a.kt)("p",null,"Gets called once the user updates the input value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const handleInputChange = (inputValue) => {\n  /**\n  inputValue: 'hello world'\n  **/\n}\n\n<MuiChipsInput onInputChange={handleInputChange} />\n")),(0,a.kt)("h2",{id:"inputvalue"},(0,a.kt)("inlineCode",{parentName:"h2"},"inputValue")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"string")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,a.kt)("p",null,"In case if you need to control the input value. Otherwise, the component will be uncontrolled."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<MuiChipsInput inputValue="" />\n')),(0,a.kt)("h2",{id:"clearinputonblur"},(0,a.kt)("inlineCode",{parentName:"h2"},"clearInputOnBlur")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"))),(0,a.kt)("p",null,"Clear the input value when the user clicks outside the input."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"<MuiChipsInput clearInputOnBlur />\n")),(0,a.kt)("h2",{id:"hideclearall"},(0,a.kt)("inlineCode",{parentName:"h2"},"hideClearAll")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"))),(0,a.kt)("p",null,'Hide the "x" icon button to prevent the user from deleting all the chips.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"<MuiChipsInput hideClearAll />\n")),(0,a.kt)("h2",{id:"disableedition"},(0,a.kt)("inlineCode",{parentName:"h2"},"disableEdition")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"))),(0,a.kt)("p",null,"Prevent the user from editing a chip when double click on it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"<MuiChipsInput disableEdition />\n")),(0,a.kt)("h2",{id:"disabledeleteonbackspace"},(0,a.kt)("inlineCode",{parentName:"h2"},"disableDeleteOnBackspace")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"))),(0,a.kt)("p",null,"By default, if the input field is empty and the user presses the delete key, the last chip will be deleted. You can disable this logic."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"<MuiChipsInput disableDeleteOnBackspace />\n")),(0,a.kt)("h2",{id:"renderchip"},(0,a.kt)("inlineCode",{parentName:"h2"},"renderChip")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"(ChipComponent: MuiChipsInputChipComponent, ChipProps: MuiChipsInputChipProps) => JSX.Element")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,a.kt)("p",null,"Custom how to render a Chip element in case if you want to add / edit the ",(0,a.kt)("a",{parentName:"p",href:"https://mui.com/material-ui/api/chip/"},"Chip props"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"<MuiChipsInput renderChip={(Component, props) => {\n  return <Component {...props} deleteIcon={<FaceIcon />} />\n}} />\n")),(0,a.kt)("h2",{id:"validate"},(0,a.kt)("inlineCode",{parentName:"h2"},"validate")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"(chipValue: string) => boolean | { isError: boolean; textError: string }")),(0,a.kt)("li",{parentName:"ul"},"Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"() => true"))),(0,a.kt)("p",null,"Set a validation to your new chips, or when user is editing a chip."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"<MuiChipsInput validate={(chipValue) => chipValue.length >= 3} />\n")),(0,a.kt)("p",null,"You can also display a text error if you need."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"<MuiChipsInput validate={(chipValue) => {\n    return {\n      isError: chipValue.length >= 3,\n      textError: 'the value must be at least 3 characters long'\n    }\n  }}\n/>\n")))}c.isMDXComponent=!0}}]);